name: CI
on: push

jobs:
  test:
    # runs-on: will be set to macos-latest when running on actual GHA. 
    # *** runs-on: ubuntu-latest is used when running via act on mac os. ***
    runs-on: macos-latest 
    steps:
    - uses: actions/checkout@v3
      with: 
        submodules: true
    
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.1'

    - name: Install gems
      run: bundle install
      
    # - name: Run iOS tests using only Xcode build.
    #   run: xcodebuild -workspace Agent.xcworkspace -scheme "Agent-iOS" -destination name="iPhone 14" -derivedDataPath="dd" clean test

    # - name: Run tvOS tests using only Xcode build.
    #   run: xcodebuild -workspace Agent.xcworkspace -scheme "Agent-tvOS" -destination name="Apple TV" -derivedDataPath="dd" clean test
    
    # - name: Run tests on iOS. (Using fastlane)
    #   run: bundle exec fastlane runIOSTests

    # - name: Archive iOS. (Using xcodebuild)
    #   run: xcodebuild clean archive -archivePath "archives/iOS.xcarchive" -configuration "Release" -workspace "Agent.xcworkspace" -scheme "Agent-iOS" -sdk "iphoneos" SKIP_INSTALL=NO BUILD_LIBRARIES_FOR_DISTRIBUTION=YES 

    - name: Run tests and build NewRelic.xcframework (using fastlane)
      run: bundle exec fastlane testAndBuild

    - name: Get name
      run: echo "version=$(cat fastlane/build_version)" >> $GITHUB_ENV

    # # In real GHA this step doesn't just output the zip file name, it uploads it to s3 as well.
    - name: Print name
      run: echo "${{ env.version }}" 

    - name: Deploy to staging
      run: "aws s3 cp ${{ env.version }} s3://nr-downloads-main/ios-v5/"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-west-1
